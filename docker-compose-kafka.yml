version: '3'

services:
  order-manager:
    container_name: order-manager
    environment:
      - SPRING_PROFILES_ACTIVE=kafka
    networks:
      - container-network
    build:
      context: ./OrderManager
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    links:
      - mongodb
    depends_on:
      - mongodb
      - kafka

  payment-processor:
    container_name: payment-processor
    environment:
      - SPRING_PROFILES_ACTIVE=kafka
    networks:
      - container-network
    build:
      context: ./PaymentProcessor
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    links:
      - mongodb
    depends_on:
      - mongodb
      - kafka

  order-monitor:
    container_name: order-monitor
    environment:
      - SPRING_PROFILES_ACTIVE=kafka
    networks:
      - container-network
    build:
      context: ./OrderMonitor
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    links:
      - mongodb
    depends_on:
      - mongodb
      - kafka

  order-tracking:
    container_name: order-tracking
    environment:
      - SPRING_PROFILES_ACTIVE=kafka
    networks:
      - container-network
    build:
      context: ./OrderTracking
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    links:
      - mongodb
    depends_on:
      - mongodb
      - kafka

  nginx:
    container_name: gateway
    networks:
      - container-network
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - order-manager
      - order-monitor
      - order-tracking
      - payment-processor

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - container-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/mongo/data
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - container-network
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    networks:
      - container-network
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  mongodb_data_container:

networks:
  container-network:
    driver: bridge